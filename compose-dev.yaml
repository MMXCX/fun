version: '3.8'

services:
  openapi-generator-cli:
    image: openapitools/openapi-generator-cli:${OPENAPI_GENERATOR}
    container_name: fi_openapi-generator-cli
    restart: no
    environment:
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - API_PREFIX=${API_PREFIX}
    volumes:
      - ./:/app
    working_dir: /app
    command: >
      bash -c '
      docker-entrypoint.sh generate --server-variables=api_host=${API_HOST},api_port=${API_PORT},api_prefix=${API_PREFIX} -i openapi.yaml -g typescript-axios -o /app/frontend/src/api'
  frontend:
    image: node:${NODE_VERSION}
    container_name: fi_frontend
    restart: unless-stopped
    ports:
      - '${CLIENT_PORT}:3000'
    environment:
      - VITE_API_URL=${API_URL}
      - VITE_API_PREFIX=${API_PREFIX}
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: >
      bash -c '
      npm i
      && npm run dev'
  backend:
    image: node:${NODE_VERSION}
    container_name: fi_backend
    restart: unless-stopped
    ports:
      - '${API_PORT}:${API_PORT}'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CLIENT_URL=${CLIENT_URL}
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
      - API_PREFIX=${API_PREFIX}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      bash -c '
      npm i
      && npx prisma generate
      && npx prisma migrate dev --name init
      && npm run dev'
    networks:
      - backend-postgres
  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: fi_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - backend-postgres
networks:
  backend-postgres: